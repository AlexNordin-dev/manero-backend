// <auto-generated />
using System;
using Manero_backend.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Manero_backend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230503205312_Productdb")]
    partial class Productdb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.BrandEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.ColorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.ImagesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductEntityid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductEntityid");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.ProductColorEntity", b =>
                {
                    b.Property<int>("ProductEntityId")
                        .HasColumnType("int");

                    b.Property<int>("ColorEntityId")
                        .HasColumnType("int");

                    b.HasKey("ProductEntityId", "ColorEntityId");

                    b.HasIndex("ColorEntityId");

                    b.ToTable("ProductColors");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityL")
                        .HasColumnType("int");

                    b.Property<int>("QuantityM")
                        .HasColumnType("int");

                    b.Property<int>("QuantityOneSize")
                        .HasColumnType("int");

                    b.Property<int>("QuantityS")
                        .HasColumnType("int");

                    b.Property<int>("QuantityXL")
                        .HasColumnType("int");

                    b.Property<int>("QuantityXS")
                        .HasColumnType("int");

                    b.Property<int>("QuantityXXL")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WishlistId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandEntityId");

                    b.HasIndex("WishlistId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.ProductSizeEntity", b =>
                {
                    b.Property<int>("ProductEntityId")
                        .HasColumnType("int");

                    b.Property<int>("SizeEntityId")
                        .HasColumnType("int");

                    b.HasKey("ProductEntityId", "SizeEntityId");

                    b.HasIndex("SizeEntityId");

                    b.ToTable("ProductSizes");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.ProductTagsEntity", b =>
                {
                    b.Property<int>("ProductEntityId")
                        .HasColumnType("int");

                    b.Property<int>("TagsEntityId")
                        .HasColumnType("int");

                    b.HasKey("ProductEntityId", "TagsEntityId");

                    b.HasIndex("TagsEntityId");

                    b.ToTable("ProductTags");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.ProductTypeEntity", b =>
                {
                    b.Property<int>("ProductEntityId")
                        .HasColumnType("int");

                    b.Property<int>("TypeEntityId")
                        .HasColumnType("int");

                    b.HasKey("ProductEntityId", "TypeEntityId");

                    b.HasIndex("TypeEntityId");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.SizeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.TagsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.TypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("Manero_backend.Models.UserProductEntities.ReviewEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductEntityId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductEntityId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Manero_backend.Models.UserProductEntities.WishlistEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Wishlists");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.ImagesEntity", b =>
                {
                    b.HasOne("Manero_backend.Models.ProductEntities.ProductEntity", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductEntityid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.ProductColorEntity", b =>
                {
                    b.HasOne("Manero_backend.Models.ProductEntities.ColorEntity", "ColorEntity")
                        .WithMany("ProductColor")
                        .HasForeignKey("ColorEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manero_backend.Models.ProductEntities.ProductEntity", "ProductEntity")
                        .WithMany("Colors")
                        .HasForeignKey("ProductEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ColorEntity");

                    b.Navigation("ProductEntity");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.ProductEntity", b =>
                {
                    b.HasOne("Manero_backend.Models.ProductEntities.BrandEntity", "BrandEntity")
                        .WithMany()
                        .HasForeignKey("BrandEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manero_backend.Models.UserProductEntities.WishlistEntity", "Wishlist")
                        .WithMany("Products")
                        .HasForeignKey("WishlistId");

                    b.Navigation("BrandEntity");

                    b.Navigation("Wishlist");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.ProductSizeEntity", b =>
                {
                    b.HasOne("Manero_backend.Models.ProductEntities.ProductEntity", "ProductEntity")
                        .WithMany("Sizes")
                        .HasForeignKey("ProductEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manero_backend.Models.ProductEntities.SizeEntity", "SizeEntity")
                        .WithMany("ProductSize")
                        .HasForeignKey("SizeEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductEntity");

                    b.Navigation("SizeEntity");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.ProductTagsEntity", b =>
                {
                    b.HasOne("Manero_backend.Models.ProductEntities.ProductEntity", "ProductEntity")
                        .WithMany("Tags")
                        .HasForeignKey("ProductEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manero_backend.Models.ProductEntities.TagsEntity", "TagsEntity")
                        .WithMany("ProductTags")
                        .HasForeignKey("TagsEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductEntity");

                    b.Navigation("TagsEntity");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.ProductTypeEntity", b =>
                {
                    b.HasOne("Manero_backend.Models.ProductEntities.ProductEntity", "ProductEntity")
                        .WithMany("Type")
                        .HasForeignKey("ProductEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manero_backend.Models.ProductEntities.TypeEntity", "TypeEntity")
                        .WithMany("ProductTypes")
                        .HasForeignKey("TypeEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductEntity");

                    b.Navigation("TypeEntity");
                });

            modelBuilder.Entity("Manero_backend.Models.UserProductEntities.ReviewEntity", b =>
                {
                    b.HasOne("Manero_backend.Models.ProductEntities.ProductEntity", null)
                        .WithMany("ReviewEntity")
                        .HasForeignKey("ProductEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.ColorEntity", b =>
                {
                    b.Navigation("ProductColor");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.ProductEntity", b =>
                {
                    b.Navigation("Colors");

                    b.Navigation("Images");

                    b.Navigation("ReviewEntity");

                    b.Navigation("Sizes");

                    b.Navigation("Tags");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.SizeEntity", b =>
                {
                    b.Navigation("ProductSize");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.TagsEntity", b =>
                {
                    b.Navigation("ProductTags");
                });

            modelBuilder.Entity("Manero_backend.Models.ProductEntities.TypeEntity", b =>
                {
                    b.Navigation("ProductTypes");
                });

            modelBuilder.Entity("Manero_backend.Models.UserProductEntities.WishlistEntity", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
